project_name: kanister
before:
  hooks:
  - go mod download
builds:
- id: kanctl
  binary: kanctl
  main: cmd/kanctl/main.go
  ldflags: &ldflags
  - -s -w
    -X github.com/kanisterio/kanister/pkg/version.VERSION={{.Version}}
    -X github.com/kanisterio/kanister/pkg/version.GIT_COMMIT={{.Commit}}
    -X github.com/kanisterio/kanister/pkg/version.BUILD_DATE={{.Date}}
  env: &env
  - GO111MODULE=on
  - CGO_ENABLED=0
  - GO_EXTLINK_ENABLED=0
  goos:
  - darwin
  - linux
  goarch: &goarch
  - amd64
- id: kando
  binary: kando
  main: cmd/kando/main.go
  ldflags: *ldflags
  env: *env
  goos: &goos
  - linux
  goarch: *goarch
- id: controller
  binary: controller
  main: cmd/controller/main.go
  ldflags: *ldflags
  env: *env
  goos: *goos
  goarch: *goarch
dockers:
- image_templates:
  - 'ghcr.io/kanisterio/kafka-adobe-s3-source-connector:{{ .Tag }}'
  dockerfile: 'docker/kafka-adobes3Connector/image/adobeSource.Dockerfile'
  extra_files:
  - 'docker/kafka-adobes3Connector/image/adobe-monitorsource.sh'
  - 'docker/kafka-adobes3Connector/image/cleans3.py'
- binaries:
  - kando
  image_templates:
  - 'ghcr.io/kanisterio/kafka-adobe-s3-sink-connector:{{ .Tag }}'
  dockerfile: 'docker/kafka-adobes3Connector/image/adobeSink.Dockerfile'
  extra_files:
  - 'docker/kafka-adobes3Connector/image/adobe-monitorsink.sh'
archives:
- allow_different_binary_count: true
snapshot:
  name_template: '{{ .Tag }}'
checksum:
  name_template: 'checksums.txt'
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
