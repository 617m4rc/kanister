apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: kafka-connect-restore-blueprint
  namespace: kasten-io
actions:
  restore:
    type: Deployment
    phases:
    - func: KubeTask
      name: restorePhase
      args:
        namespace: kafka
        podOverride:
          containers:
          - name: container
            imagePullPolicy: IfNotPresent
        image: akankshakumari393/confluent-kafka-s3source:latest
        command:
          - bash
          - -c
          - |
            mkdir /tmp/config
            {{- if .Profile.Credential.KeyPair }}
            export AWS_SECRET_KEY="{{ .Profile.Credential.KeyPair.Secret }}"
            export AWS_ACCESS_KEY="{{ .Profile.Credential.KeyPair.ID }}"
            {{- else }}
            export AWS_SECRET_KEY="{{ .Profile.Credential.Secret.Data.aws_secret_access_key | toString }}"
            export AWS_ACCESS_KEY="{{ .Profile.Credential.Secret.Data.aws_access_key_id | toString }}"
            {{- end }}
            region="{{ .Profile.Location.Region }}"
            bucket="{{ .Profile.Location.Bucket }}"
            s3config="{{ index .Object.data "s3Source.properties" | toString }}"
            echo -e "${s3config}\ns3.region= ${region}\ns3.bucket.name= ${bucket}\n" > /tmp/config/s3config.properties
            kafkaConfig="{{ index .Object.data "kafkaConfiguration.properties" | toString }}"
            echo "$kafkaConfig" > /tmp/config/kafkaConfig.properties
            export topic=`cat /tmp/config/s3config.properties | grep "confluent.topic" | cut -d'=' -f2`
            export bootstrapServer=`cat /tmp/config/s3config.properties | grep "confluent.topic.bootstrap.servers" | cut -d'=' -f2`
            
            export retentionPeriod="$(/bin/kafka-configs --describe --bootstrap-server "$bootstrapServer" --entity-type topics --entity-name "$topic" --all | grep -m1 retention.ms | sed 's/[^0-9]*//; s/ .*//')"
            
            /bin/kafka-configs --bootstrap-server "$bootstrapServer" --entity-type topics --entity-name "$topic" bin/kafka-configs.sh --alter --add-config retention.ms=1
            export startOffset="$(/bin/kafka-run-class kafka.tools.GetOffsetShell --broker-list "$bootstrapServer" --topic "$topic" --time -1)"
            export endoffset="$(/bin/kafka-run-class kafka.tools.GetOffsetShell --broker-list "$bootstrapServer" --topic "$topic" --time -2)"
            echo env > /tmp/config/env.properties
            until [ "$startOffset" = "$endoffset" ]
            do
              startOffset = bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list "$bootstrapServer" --topic "$topic" --time -1
              endoffset = bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list "$bootstrapServer" --topic "$topic" --time -2

              sleep 1
            done
            /bin/kafka-configs --bootstrap-server "$bootstrapServer" --entity-type topics --entity-name "$topic" bin/kafka-configs.sh --alter --add-config retention.ms="$retentionPeriod"
            sh /bin/connect-standalone /tmp/config/kafkaConfig.properties /tmp/config/s3config.properties

            
            